import pandas as pd
import numpy as np
from pymongo import MongoClient
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.svm import SVC
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import recall_score, f1_score
df = pd.read_csv("New Institutes.csv")
client = df.MongoClient()
db = client['institutes_database']
collection = db['applications']
print(df.head())
records = df.to_dict(orient='records')
collection.insert_many(records)
missing_values = df.isnull().sum()
print("Missing values in each field:\n", missing_values)
state_count = collection.aggregate([
    {"$group": {"_id": "$state", "count": {"$sum": 1}}}
])
for result in state_count:
    print(f"State: {result['_id']}, Applications: {result['count']}")
label_encoder = LabelEncoder()
df['state_encoded'] = label_encoder.fit_transform(df['state'])
df['region_encoded'] = label_encoder.fit_transform(df['region'])
df['program_encoded'] = label_encoder.fit_transform(df['program'])
df['approval_encoded'] = label_encoder.fit_transform(df['approval_status'])
X = df[['state_encoded', 'region_encoded', 'program_encoded']]
y = df['approval_encoded']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
naive_bayes = GaussianNB()
svm = SVC(kernel='linear')
naive_bayes.fit(X_train, y_train)
y_nb = naive_bayes.predict(X_test)
svm.fit(X_train, y_train)
y_svm = svm.predict(X_test)
recall_nb = recall_score(y_test, y_nb)
f1_nb = f1_score(y_test, y_nb)
recall_svm = recall_score(y_test, y_svm)
f1_svm = f1_score(y_test, y_svm)
print(f"Naive Bayes - Recall: {recall_nb}, F1 Score: {f1_nb}")
print(f"SVM - Recall: {recall_svm}, F1 Score: {f1_svm}")
sns.countplot(data=db,x='region', hue='program')
plt.title(" Relationship between Region & Program")
plt.xlabel("Region and Program")
plt.ylabel("No of applicants")
plt.show()
